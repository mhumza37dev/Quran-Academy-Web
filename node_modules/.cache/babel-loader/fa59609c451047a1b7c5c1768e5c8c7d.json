{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\humza\\\\Quran-Academy-Web\\\\src\\\\StudentDashboard\\\\src\\\\layouts\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Navbar from \"../components/Navbars/Navbar.js\";\nimport Footer from \"../components/Footer/Footer.js\";\nimport Sidebar from \"../components/Sidebar/Sidebar.js\";\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin.js\";\nimport routes from \"../routes.js\";\nimport styles from \"../assets/jss/material-dashboard-react/layouts/adminStyle.js\";\nimport bgImage from \"../assets/img/sidebar-2.jpg\";\nimport logo from \"../assets/img/reactlogo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet ps;\n\nconst switchRoutes = /*#__PURE__*/_jsxDEV(Switch, {\n  children: [routes.map((prop, key) => {\n    if (prop.layout === \"/student\") {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: prop.layout + prop.path,\n        component: prop.component\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }\n\n    return null;\n  }), /*#__PURE__*/_jsxDEV(Redirect, {\n    from: \"/student\",\n    to: \"/student/dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\nconst useStyles = makeStyles(styles);\nexport default function Admin(props) {\n  _s();\n\n  // styles\n  const classes = useStyles(); // ref to help us initialize PerfectScrollbar on windows devices\n\n  const mainPanel = /*#__PURE__*/React.createRef(); // states and functions\n\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleImageClick = image => {\n    setImage(image);\n  };\n\n  const handleColorClick = color => {\n    setColor(color);\n  };\n\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  }; // initialize and destroy the PerfectScrollbar plugin\n\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n\n    window.addEventListener(\"resize\", resizeFunction); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      routes: routes,\n      logoText: \"Quran Academy\",\n      logo: logo,\n      image: image,\n      handleDrawerToggle: handleDrawerToggle,\n      open: mobileOpen,\n      color: color,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.mainPanel,\n      ref: mainPanel,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        routes: routes,\n        handleDrawerToggle: handleDrawerToggle,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), getRoute() ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: switchRoutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.map,\n        children: switchRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), getRoute() ? /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this) : null, /*#__PURE__*/_jsxDEV(FixedPlugin, {\n        handleImageClick: handleImageClick,\n        handleColorClick: handleColorClick,\n        bgColor: color,\n        bgImage: image,\n        handleFixedClick: handleFixedClick,\n        fixedClasses: fixedClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Admin, \"NLA11iDzX+tVDgzTycfNKDldnNU=\", false, function () {\n  return [useStyles];\n});\n\n_c = Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/User/Desktop/humza/Quran-Academy-Web/src/StudentDashboard/src/layouts/Admin.js"],"names":["React","Switch","Route","Redirect","PerfectScrollbar","makeStyles","Navbar","Footer","Sidebar","FixedPlugin","routes","styles","bgImage","logo","ps","switchRoutes","map","prop","key","layout","path","component","useStyles","Admin","props","classes","mainPanel","createRef","image","setImage","useState","color","setColor","fixedClasses","setFixedClasses","mobileOpen","setMobileOpen","handleImageClick","handleColorClick","handleFixedClick","handleDrawerToggle","getRoute","window","location","pathname","resizeFunction","innerWidth","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","document","body","style","overflow","addEventListener","cleanup","destroy","removeEventListener","wrapper","content","container"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n// creates a beautiful scrollbar\r\nimport PerfectScrollbar from \"perfect-scrollbar\";\r\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// core components\r\nimport Navbar from \"../components/Navbars/Navbar.js\";\r\nimport Footer from \"../components/Footer/Footer.js\";\r\nimport Sidebar from \"../components/Sidebar/Sidebar.js\";\r\nimport FixedPlugin from \"../components/FixedPlugin/FixedPlugin.js\";\r\n\r\nimport routes from \"../routes.js\";\r\n\r\nimport styles from \"../assets/jss/material-dashboard-react/layouts/adminStyle.js\";\r\n\r\nimport bgImage from \"../assets/img/sidebar-2.jpg\";\r\nimport logo from \"../assets/img/reactlogo.png\";\r\n\r\nlet ps;\r\n\r\nconst switchRoutes = (\r\n  <Switch>\r\n    {routes.map((prop, key) => {\r\n      if (prop.layout === \"/student\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    })}\r\n    <Redirect from=\"/student\" to=\"/student/dashboard\" />\r\n  </Switch>\r\n);\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Admin(props) {\r\n  // styles\r\n  const classes = useStyles();\r\n  // ref to help us initialize PerfectScrollbar on windows devices\r\n  const mainPanel = React.createRef();\r\n  // states and functions\r\n  const [image, setImage] = React.useState(bgImage);\r\n  const [color, setColor] = React.useState(\"blue\");\r\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const handleImageClick = (image) => {\r\n    setImage(image);\r\n  };\r\n  const handleColorClick = (color) => {\r\n    setColor(color);\r\n  };\r\n  const handleFixedClick = () => {\r\n    if (fixedClasses === \"dropdown\") {\r\n      setFixedClasses(\"dropdown show\");\r\n    } else {\r\n      setFixedClasses(\"dropdown\");\r\n    }\r\n  };\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n  const getRoute = () => {\r\n    return window.location.pathname !== \"/admin/maps\";\r\n  };\r\n  const resizeFunction = () => {\r\n    if (window.innerWidth >= 960) {\r\n      setMobileOpen(false);\r\n    }\r\n  };\r\n  // initialize and destroy the PerfectScrollbar plugin\r\n  React.useEffect(() => {\r\n    if (navigator.platform.indexOf(\"Win\") > -1) {\r\n      ps = new PerfectScrollbar(mainPanel.current, {\r\n        suppressScrollX: true,\r\n        suppressScrollY: false,\r\n      });\r\n      document.body.style.overflow = \"hidden\";\r\n    }\r\n    window.addEventListener(\"resize\", resizeFunction);\r\n    // Specify how to clean up after this effect:\r\n    return function cleanup() {\r\n      if (navigator.platform.indexOf(\"Win\") > -1) {\r\n        ps.destroy();\r\n      }\r\n      window.removeEventListener(\"resize\", resizeFunction);\r\n    };\r\n  }, [mainPanel]);\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Sidebar\r\n        routes={routes}\r\n        logoText={\"Quran Academy\"}\r\n        logo={logo}\r\n        image={image}\r\n        handleDrawerToggle={handleDrawerToggle}\r\n        open={mobileOpen}\r\n        color={color}\r\n        {...props}\r\n      />\r\n      <div className={classes.mainPanel} ref={mainPanel}>\r\n        <Navbar\r\n          routes={routes}\r\n          handleDrawerToggle={handleDrawerToggle}\r\n          {...props}\r\n        />\r\n        {/* On the /maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\r\n        {getRoute() ? (\r\n          <div className={classes.content}>\r\n            <div className={classes.container}>{switchRoutes}</div>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.map}>{switchRoutes}</div>\r\n        )}\r\n        {getRoute() ? <Footer /> : null}\r\n        <FixedPlugin\r\n          handleImageClick={handleImageClick}\r\n          handleColorClick={handleColorClick}\r\n          bgColor={color}\r\n          bgImage={image}\r\n          handleFixedClick={handleFixedClick}\r\n          fixedClasses={fixedClasses}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}