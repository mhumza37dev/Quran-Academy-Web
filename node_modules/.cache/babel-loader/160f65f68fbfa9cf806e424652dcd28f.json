{"ast":null,"code":"var _jsxFileName = \"/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/components/Sidebar/Sidebar.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Person from \"@material-ui/icons/Person\"; // core components\n\nimport AdminNavbarLinks from \"../../components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../../components/Navbars/RTLNavbarLinks.js\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  _s();\n\n  const classes = useStyles();\n  let location = useLocation(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return location.pathname === routeName;\n  }\n\n  const {\n    color,\n    logo,\n    image,\n    logoText,\n    routes\n  } = props;\n\n  var links = /*#__PURE__*/_jsxDEV(List, {\n    className: classes.list,\n    children: routes.map((prop, key) => {\n      var activePro = \" \";\n      var listItemClasses;\n\n      if (prop.path === \"/upgrade-to-pro\") {\n        activePro = classes.activePro + \" \";\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: true\n        });\n      } else {\n        listItemClasses = classNames({\n          [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n        });\n      }\n\n      const whiteFontClasses = classNames({\n        [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n      });\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: prop.layout + prop.path,\n        className: activePro + classes.item,\n        activeClassName: \"active\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          className: classes.itemLink + listItemClasses,\n          children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n            className: classNames(classes.itemIcon, whiteFontClasses, {\n              [classes.itemIconRTL]: props.rtlActive\n            }),\n            children: prop.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(prop.icon, {\n            className: classNames(classes.itemIcon, whiteFontClasses, {\n              [classes.itemIconRTL]: props.rtlActive\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: props.rtlActive ? prop.rtlName : prop.name,\n            className: classNames(classes.itemText, whiteFontClasses, {\n              [classes.itemTextRTL]: props.rtlActive\n            }),\n            disableTypography: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  var brand = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.logo,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(classes.logoLink, {\n        [classes.logoLinkRTL]: props.rtlActive\n      }),\n      target: \"_blank\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), logoText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        anchor: props.rtlActive ? \"left\" : \"right\",\n        open: props.open,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          })\n        },\n        onClose: props.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: [props.rtlActive ? /*#__PURE__*/_jsxDEV(RTLNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(AdminNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 53\n          }, this), links]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: props.rtlActive ? \"right\" : \"left\",\n        variant: \"permanent\",\n        open: true,\n        classes: {\n          paper: classNames(classes.drawerPaper, {\n            [classes.drawerPaperRTL]: props.rtlActive\n          })\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: [links, /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              bottom: 0,\n              position: \"absolute\"\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: classes.list,\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                to: \"!\",\n                className: classes.activePro + classes.item,\n                activeClassName: \"active\",\n                children: /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  className: classes.itemLink,\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    className: classNames(classes.itemIcon, {\n                      [classes.itemIconRTL]: props.rtlActive\n                    }),\n                    style: {\n                      display: \"inline\",\n                      color: \"red\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PowerSettingsNewIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Logout\",\n                    className: classNames(classes.itemText, {\n                      [classes.itemTextRTL]: props.rtlActive\n                    }),\n                    disableTypography: true,\n                    style: {\n                      display: \"inline\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Sidebar;\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","useLocation","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","Person","AdminNavbarLinks","RTLNavbarLinks","PowerSettingsNewIcon","styles","useStyles","Sidebar","props","classes","location","activeRoute","routeName","pathname","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","bottom","position","display","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,OAAOC,cAAP,MAA2B,4CAA3B;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AAEA,OAAOC,MAAP,MAAmB,sEAAnB;;AAEA,MAAMC,SAAS,GAAGZ,UAAU,CAACW,MAAD,CAA5B;AAEA,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAII,QAAQ,GAAGjB,WAAW,EAA1B,CAFqC,CAGrC;;AACA,WAASkB,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAOF,QAAQ,CAACG,QAAT,KAAsBD,SAA7B;AACD;;AACD,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAA2CV,KAAjD;;AACA,MAAIW,KAAK,gBACP,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEV,OAAO,CAACW,IAAzB;AAAA,cACGF,MAAM,CAACG,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACzB,UAAIC,SAAS,GAAG,GAAhB;AACA,UAAIC,eAAJ;;AACA,UAAIH,IAAI,CAACI,IAAL,KAAc,iBAAlB,EAAqC;AACnCF,QAAAA,SAAS,GAAGf,OAAO,CAACe,SAAR,GAAoB,GAAhC;AACAC,QAAAA,eAAe,GAAGnC,UAAU,CAAC;AAC3B,WAAC,MAAMmB,OAAO,CAACK,KAAD,CAAd,GAAwB;AADG,SAAD,CAA5B;AAGD,OALD,MAKO;AACLW,QAAAA,eAAe,GAAGnC,UAAU,CAAC;AAC3B,WAAC,MAAMmB,OAAO,CAACK,KAAD,CAAd,GAAwBH,WAAW,CAACW,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB;AADR,SAAD,CAA5B;AAGD;;AACD,YAAME,gBAAgB,GAAGtC,UAAU,CAAC;AAClC,SAAC,MAAMmB,OAAO,CAACoB,SAAf,GAA2BlB,WAAW,CAACW,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB;AADJ,OAAD,CAAnC;AAGA,0BACE,QAAC,OAAD;AACE,QAAA,EAAE,EAAEJ,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IADzB;AAEE,QAAA,SAAS,EAAEF,SAAS,GAAGf,OAAO,CAACqB,IAFjC;AAGE,QAAA,eAAe,EAAC,QAHlB;AAAA,+BAME,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,SAAS,EAAErB,OAAO,CAACsB,QAAR,GAAmBN,eAA/C;AAAA,qBACG,OAAOH,IAAI,CAACU,IAAZ,KAAqB,QAArB,gBACC,QAAC,IAAD;AACE,YAAA,SAAS,EAAE1C,UAAU,CAACmB,OAAO,CAACwB,QAAT,EAAmBL,gBAAnB,EAAqC;AACxD,eAACnB,OAAO,CAACyB,WAAT,GAAuB1B,KAAK,CAAC2B;AAD2B,aAArC,CADvB;AAAA,sBAKGb,IAAI,CAACU;AALR;AAAA;AAAA;AAAA;AAAA,kBADD,gBASC,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,SAAS,EAAE1C,UAAU,CAACmB,OAAO,CAACwB,QAAT,EAAmBL,gBAAnB,EAAqC;AACxD,eAACnB,OAAO,CAACyB,WAAT,GAAuB1B,KAAK,CAAC2B;AAD2B,aAArC;AADvB;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAgBE,QAAC,YAAD;AACE,YAAA,OAAO,EAAE3B,KAAK,CAAC2B,SAAN,GAAkBb,IAAI,CAACc,OAAvB,GAAiCd,IAAI,CAACe,IADjD;AAEE,YAAA,SAAS,EAAE/C,UAAU,CAACmB,OAAO,CAAC6B,QAAT,EAAmBV,gBAAnB,EAAqC;AACxD,eAACnB,OAAO,CAAC8B,WAAT,GAAuB/B,KAAK,CAAC2B;AAD2B,aAArC,CAFvB;AAKE,YAAA,iBAAiB,EAAE;AALrB;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,SAIOZ,GAJP;AAAA;AAAA;AAAA;AAAA,cADF;AAiCD,KAjDA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAsDA,MAAIiB,KAAK,gBACP;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACM,IAAxB;AAAA,2BACE;AACE,MAAA,SAAS,EAAEzB,UAAU,CAACmB,OAAO,CAACgC,QAAT,EAAmB;AACtC,SAAChC,OAAO,CAACiC,WAAT,GAAuBlC,KAAK,CAAC2B;AADS,OAAnB,CADvB;AAIE,MAAA,MAAM,EAAC,QAJT;AAAA,8BAME;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACkC,SAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAE5B,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEN,OAAO,CAACmC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,EASG3B,QATH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAa,MAAA,cAAc,EAAC,KAA5B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,MAAM,EAAET,KAAK,CAAC2B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,QAAA,IAAI,EAAE3B,KAAK,CAACqC,IAHd;AAIE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAExD,UAAU,CAACmB,OAAO,CAACsC,WAAT,EAAsB;AACrC,aAACtC,OAAO,CAACuC,cAAT,GAA0BxC,KAAK,CAAC2B;AADK,WAAtB;AADV,SAJX;AASE,QAAA,OAAO,EAAE3B,KAAK,CAACyC,kBATjB;AAUE,QAAA,UAAU,EAAE;AACVC,UAAAA,WAAW,EAAE,IADH,CACS;;AADT,SAVd;AAAA,mBAcGV,KAdH,eAeE;AAAK,UAAA,SAAS,EAAE/B,OAAO,CAAC0C,cAAxB;AAAA,qBACG3C,KAAK,CAAC2B,SAAN,gBAAkB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAlB,gBAAuC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAD1C,EAEGhB,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAmBGH,KAAK,KAAKoC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE3C,OAAO,CAAC4C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,cAAc,EAAC,KAA9B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAER,KAAK,CAAC2B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,OAAO,EAAE;AACPW,UAAAA,KAAK,EAAExD,UAAU,CAACmB,OAAO,CAACsC,WAAT,EAAsB;AACrC,aAACtC,OAAO,CAACuC,cAAT,GAA0BxC,KAAK,CAAC2B;AADK,WAAtB;AADV,SAJX;AAAA,mBAUGK,KAVH,eAWE;AAAK,UAAA,SAAS,EAAE/B,OAAO,CAAC0C,cAAxB;AAAA,qBACGhC,KADH,eAEE;AAAK,YAAA,KAAK,EAAE;AAAEoC,cAAAA,MAAM,EAAE,CAAV;AAAaC,cAAAA,QAAQ,EAAE;AAAvB,aAAZ;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAE/C,OAAO,CAACW,IAAzB;AAAA,qCACE,QAAC,OAAD;AACE,gBAAA,EAAE,EAAE,GADN;AAEE,gBAAA,SAAS,EAAEX,OAAO,CAACe,SAAR,GAAoBf,OAAO,CAACqB,IAFzC;AAGE,gBAAA,eAAe,EAAC,QAHlB;AAAA,uCAKE,QAAC,QAAD;AAAU,kBAAA,MAAM,MAAhB;AAAiB,kBAAA,SAAS,EAAErB,OAAO,CAACsB,QAApC;AAAA,0CACE,QAAC,IAAD;AACE,oBAAA,SAAS,EAAEzC,UAAU,CAACmB,OAAO,CAACwB,QAAT,EAAmB;AACtC,uBAACxB,OAAO,CAACyB,WAAT,GAAuB1B,KAAK,CAAC2B;AADS,qBAAnB,CADvB;AAIE,oBAAA,KAAK,EAAE;AAAEsB,sBAAAA,OAAO,EAAE,QAAX;AAAqB3C,sBAAAA,KAAK,EAAE;AAA5B,qBAJT;AAAA,2CAME,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,0BADF,eASE,QAAC,YAAD;AACE,oBAAA,OAAO,EAAE,QADX;AAEE,oBAAA,SAAS,EAAExB,UAAU,CAACmB,OAAO,CAAC6B,QAAT,EAAmB;AACtC,uBAAC7B,OAAO,CAAC8B,WAAT,GAAuB/B,KAAK,CAAC2B;AADS,qBAAnB,CAFvB;AAKE,oBAAA,iBAAiB,EAAE,IALrB;AAME,oBAAA,KAAK,EAAE;AAAEsB,sBAAAA,OAAO,EAAE;AAAX;AANT;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EA0CGzC,KAAK,KAAKoC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE3C,OAAO,CAAC4C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IA/CN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD;;GAhKuBT,O;UACND,S,EACDb,W;;;KAFOc,O;AAkKxBA,OAAO,CAACmD,SAAR,GAAoB;AAClBvB,EAAAA,SAAS,EAAE5C,SAAS,CAACoE,IADH;AAElBV,EAAAA,kBAAkB,EAAE1D,SAAS,CAACqE,IAFZ;AAGlBC,EAAAA,OAAO,EAAEtE,SAAS,CAACuE,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,EAAsC,KAAtC,CAAhB,CAHS;AAIlB/C,EAAAA,IAAI,EAAExB,SAAS,CAACwE,MAJE;AAKlB/C,EAAAA,KAAK,EAAEzB,SAAS,CAACwE,MALC;AAMlB9C,EAAAA,QAAQ,EAAE1B,SAAS,CAACwE,MANF;AAOlB7C,EAAAA,MAAM,EAAE3B,SAAS,CAACyE,OAAV,CAAkBzE,SAAS,CAAC0E,MAA5B,CAPU;AAQlBpB,EAAAA,IAAI,EAAEtD,SAAS,CAACoE;AARE,CAApB","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n\nimport Person from \"@material-ui/icons/Person\";\n// core components\nimport AdminNavbarLinks from \"../../components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"../../components/Navbars/RTLNavbarLinks.js\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  let location = useLocation();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return location.pathname === routeName;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true,\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive,\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive,\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive,\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive,\n            }),\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {links}\n            <div style={{ bottom: 0, position: \"absolute\" }}>\n              <List className={classes.list}>\n                <NavLink\n                  to={\"!\"}\n                  className={classes.activePro + classes.item}\n                  activeClassName=\"active\"\n                >\n                  <ListItem button className={classes.itemLink}>\n                    <Icon\n                      className={classNames(classes.itemIcon, {\n                        [classes.itemIconRTL]: props.rtlActive,\n                      })}\n                      style={{ display: \"inline\", color: \"red\" }}\n                    >\n                      <PowerSettingsNewIcon />\n                    </Icon>\n                    <ListItemText\n                      primary={\"Logout\"}\n                      className={classNames(classes.itemText, {\n                        [classes.itemTextRTL]: props.rtlActive,\n                      })}\n                      disableTypography={true}\n                      style={{ display: \"inline\" }}\n                    />\n                  </ListItem>\n                </NavLink>\n              </List>\n            </div>\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}