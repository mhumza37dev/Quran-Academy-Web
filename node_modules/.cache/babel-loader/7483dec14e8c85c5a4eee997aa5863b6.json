{"ast":null,"code":"var _jsxFileName = \"/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/components/Navbars/AdminNavbarLinks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\"; // @material-ui/icons\n\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\"; // core components\n\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport styles from \"../../assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function AdminNavbarLinks(props) {\n  _s();\n\n  console.log(\"sssssssss\", props);\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n\n  const handleClickNotification = event => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n\n  const handleClickProfile = event => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenProfile(null);\n  };\n\n  const handleCloseProfile = component => {\n    props.history.push(`/student/${component}`);\n    handleCloseDropDown();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.searchWrapper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.manager,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: window.innerWidth > 959 ? \"transparent\" : \"black\" // justIcon={window.innerWidth > 959}\n        // simple={!(window.innerWidth > 959)}\n        // aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n        ,\n        style: {},\n        \"aria-haspopup\": \"true\",\n        onClick: handleClickProfile,\n        className: classes.buttonLink,\n        children: /*#__PURE__*/_jsxDEV(Person, {\n          className: classes.icons\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Poppers, {\n        open: Boolean(openProfile),\n        anchorEl: openProfile,\n        transition: true,\n        disablePortal: true,\n        className: classNames({\n          [classes.popperClose]: !openProfile\n        }) + \" \" + classes.popperNav,\n        ...props,\n        children: ({\n          TransitionProps,\n          placement\n        }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n          id: \"profile-menu-list-grow\",\n          style: {\n            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, { ...props,\n              onClickAway: handleCloseDropDown,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                role: \"menu\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleCloseProfile(\"user\"),\n                  className: classes.dropdownItem,\n                  children: \"Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleCloseDropDown(),\n                  className: classes.dropdownItem,\n                  children: \"Settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  light: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleCloseDropDown(),\n                  className: classes.dropdownItem,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminNavbarLinks, \"obkAD6bjcze/GTuaSCqnUR2ISxM=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminNavbarLinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminNavbarLinks\");","map":{"version":3,"sources":["/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/components/Navbars/AdminNavbarLinks.js"],"names":["React","classNames","makeStyles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Divider","Person","Notifications","Dashboard","Search","CustomInput","Button","styles","useStyles","AdminNavbarLinks","props","console","log","classes","openNotification","setOpenNotification","useState","openProfile","setOpenProfile","handleClickNotification","event","contains","target","currentTarget","handleCloseNotification","handleClickProfile","handleCloseDropDown","handleCloseProfile","component","history","push","searchWrapper","manager","window","innerWidth","buttonLink","icons","Boolean","popperClose","popperNav","TransitionProps","placement","transformOrigin","dropdownItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Poppers from \"@material-ui/core/Popper\";\nimport Divider from \"@material-ui/core/Divider\";\n// @material-ui/icons\nimport Person from \"@material-ui/icons/Person\";\nimport Notifications from \"@material-ui/icons/Notifications\";\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Search from \"@material-ui/icons/Search\";\n// core components\nimport CustomInput from \"../../components/CustomInput/CustomInput.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function AdminNavbarLinks(props) {\n  console.log(\"sssssssss\", props);\n  const classes = useStyles();\n  const [openNotification, setOpenNotification] = React.useState(null);\n  const [openProfile, setOpenProfile] = React.useState(null);\n  const handleClickNotification = (event) => {\n    if (openNotification && openNotification.contains(event.target)) {\n      setOpenNotification(null);\n    } else {\n      setOpenNotification(event.currentTarget);\n    }\n  };\n  const handleCloseNotification = () => {\n    setOpenNotification(null);\n  };\n  const handleClickProfile = (event) => {\n    if (openProfile && openProfile.contains(event.target)) {\n      setOpenProfile(null);\n    } else {\n      setOpenProfile(event.currentTarget);\n    }\n  };\n  const handleCloseDropDown = () => {\n    setOpenProfile(null);\n  };\n  const handleCloseProfile = (component) => {\n    props.history.push(`/student/${component}`);\n    handleCloseDropDown();\n  };\n  return (\n    <div>\n      <div className={classes.searchWrapper}>\n        {/* <CustomInput\n          formControlProps={{\n            className: classes.margin + \" \" + classes.search,\n          }}\n          inputProps={{\n            placeholder: \"Search\",\n            inputProps: {\n              \"aria-label\": \"Search\",\n            },\n          }}\n        /> */}\n        {/* <Button color=\"white\" aria-label=\"edit\" justIcon round>\n          <Search />\n        </Button> */}\n      </div>\n      {/* <Button\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n        justIcon={window.innerWidth > 959}\n        simple={!(window.innerWidth > 959)}\n        aria-label=\"Dashboard\"\n        className={classes.buttonLink}\n      >\n        <Dashboard className={classes.icons} />\n        <Hidden mdUp implementation=\"css\">\n          <p className={classes.linkText}>Dashboard</p>\n        </Hidden>\n      </Button> */}\n      {/* <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\n          justIcon={window.innerWidth > 959}\n          simple={!(window.innerWidth > 959)}\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\n          aria-haspopup=\"true\"\n          onClick={handleClickNotification}\n          className={classes.buttonLink}\n        >\n          <Notifications className={classes.icons} />\n          <span className={classes.notifications}>5</span>\n          <Hidden mdUp implementation=\"css\">\n            <p onClick={handleCloseNotification} className={classes.linkText}>\n              Notification\n            </p>\n          </Hidden>\n        </Button>\n        <Poppers\n          open={Boolean(openNotification)}\n          anchorEl={openNotification}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openNotification }) +\n            \" \" +\n            classes.popperNav\n          }\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"notification-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleCloseNotification}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Mike John responded to your email\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You have 5 new tasks\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      You{\"'\"}re now friend with Andrew\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another Notification\n                    </MenuItem>\n                    <MenuItem\n                      onClick={handleCloseNotification}\n                      className={classes.dropdownItem}\n                    >\n                      Another One\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div> */}\n      <div className={classes.manager}>\n        <Button\n          color={window.innerWidth > 959 ? \"transparent\" : \"black\"}\n          // justIcon={window.innerWidth > 959}\n          // simple={!(window.innerWidth > 959)}\n          // aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\n          style={{}}\n          aria-haspopup=\"true\"\n          onClick={handleClickProfile}\n          className={classes.buttonLink}\n        >\n          <Person className={classes.icons} />\n        </Button>\n        <Poppers\n          open={Boolean(openProfile)}\n          anchorEl={openProfile}\n          transition\n          disablePortal\n          className={\n            classNames({ [classes.popperClose]: !openProfile }) +\n            \" \" +\n            classes.popperNav\n          }\n          {...props}\n        >\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              id=\"profile-menu-list-grow\"\n              style={{\n                transformOrigin:\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\n              }}\n            >\n              <Paper>\n                <ClickAwayListener {...props} onClickAway={handleCloseDropDown}>\n                  <MenuList role=\"menu\">\n                    <MenuItem\n                      onClick={() => handleCloseProfile(\"user\")}\n                      className={classes.dropdownItem}\n                    >\n                      Profile\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => handleCloseDropDown()}\n                      className={classes.dropdownItem}\n                    >\n                      Settings\n                    </MenuItem>\n                    <Divider light />\n                    <MenuItem\n                      onClick={() => handleCloseDropDown()}\n                      className={classes.dropdownItem}\n                    >\n                      Logout\n                    </MenuItem>\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Poppers>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}