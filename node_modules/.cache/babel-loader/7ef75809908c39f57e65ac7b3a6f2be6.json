{"ast":null,"code":"var _jsxFileName = \"/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/views/Maps/Maps.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Maps = () => {\n  _s();\n\n  const mapRef = React.useRef(null);\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [{\n        featureType: \"water\",\n        stylers: [{\n          saturation: 43\n        }, {\n          lightness: -11\n        }, {\n          hue: \"#0088ff\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          hue: \"#ff0000\"\n        }, {\n          saturation: -100\n        }, {\n          lightness: 99\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"geometry.stroke\",\n        stylers: [{\n          color: \"#808080\"\n        }, {\n          lightness: 54\n        }]\n      }, {\n        featureType: \"landscape.man_made\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#ece2d9\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          color: \"#ccdca1\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.fill\",\n        stylers: [{\n          color: \"#767676\"\n        }]\n      }, {\n        featureType: \"road\",\n        elementType: \"labels.text.stroke\",\n        stylers: [{\n          color: \"#ffffff\"\n        }]\n      }, {\n        featureType: \"poi\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }, {\n        featureType: \"landscape.natural\",\n        elementType: \"geometry.fill\",\n        stylers: [{\n          visibility: \"on\"\n        }, {\n          color: \"#b8cb93\"\n        }]\n      }, {\n        featureType: \"poi.park\",\n        stylers: [{\n          visibility: \"on\"\n        }]\n      }, {\n        featureType: \"poi.sports_complex\",\n        stylers: [{\n          visibility: \"on\"\n        }]\n      }, {\n        featureType: \"poi.medical\",\n        stylers: [{\n          visibility: \"on\"\n        }]\n      }, {\n        featureType: \"poi.business\",\n        stylers: [{\n          visibility: \"simplified\"\n        }]\n      }]\n    };\n    map = new google.maps.Map(map, mapOptions);\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Material Dashboard React!\"\n    });\n    const contentString = '<div class=\"info-window-content\"><h2>Material Dashboard React</h2>' + \"<p>A premium Admin for React, Material-UI, and React Hooks.</p></div>\";\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString\n    });\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: `100vh`\n      },\n      ref: mapRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Maps, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n\n_c = Maps;\nexport default Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["/Users/hackintosh3/Downloads/themeforest-KKCr05Sa-educhamp-education-react-template/package/src/StudentDashboard/src/views/Maps/Maps.js"],"names":["React","Maps","mapRef","useRef","useEffect","google","window","map","current","lat","lng","myLatlng","maps","LatLng","mapOptions","zoom","center","scrollwheel","zoomControl","styles","featureType","stylers","saturation","lightness","hue","elementType","color","visibility","Map","marker","Marker","position","animation","Animation","DROP","title","contentString","infowindow","InfoWindow","content","event","addListener","open","height"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst Maps = () => {\n  const mapRef = React.useRef(null);\n  React.useEffect(() => {\n    let google = window.google;\n    let map = mapRef.current;\n    let lat = \"40.748817\";\n    let lng = \"-73.985428\";\n    const myLatlng = new google.maps.LatLng(lat, lng);\n    const mapOptions = {\n      zoom: 12,\n      center: myLatlng,\n      scrollwheel: false,\n      zoomControl: true,\n      styles: [\n        {\n          featureType: \"water\",\n          stylers: [{ saturation: 43 }, { lightness: -11 }, { hue: \"#0088ff\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"geometry.fill\",\n          stylers: [\n            { hue: \"#ff0000\" },\n            { saturation: -100 },\n            { lightness: 99 },\n          ],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"geometry.stroke\",\n          stylers: [{ color: \"#808080\" }, { lightness: 54 }],\n        },\n        {\n          featureType: \"landscape.man_made\",\n          elementType: \"geometry.fill\",\n          stylers: [{ color: \"#ece2d9\" }],\n        },\n        {\n          featureType: \"poi.park\",\n          elementType: \"geometry.fill\",\n          stylers: [{ color: \"#ccdca1\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"labels.text.fill\",\n          stylers: [{ color: \"#767676\" }],\n        },\n        {\n          featureType: \"road\",\n          elementType: \"labels.text.stroke\",\n          stylers: [{ color: \"#ffffff\" }],\n        },\n        { featureType: \"poi\", stylers: [{ visibility: \"off\" }] },\n        {\n          featureType: \"landscape.natural\",\n          elementType: \"geometry.fill\",\n          stylers: [{ visibility: \"on\" }, { color: \"#b8cb93\" }],\n        },\n        { featureType: \"poi.park\", stylers: [{ visibility: \"on\" }] },\n        {\n          featureType: \"poi.sports_complex\",\n          stylers: [{ visibility: \"on\" }],\n        },\n        { featureType: \"poi.medical\", stylers: [{ visibility: \"on\" }] },\n        {\n          featureType: \"poi.business\",\n          stylers: [{ visibility: \"simplified\" }],\n        },\n      ],\n    };\n\n    map = new google.maps.Map(map, mapOptions);\n\n    const marker = new google.maps.Marker({\n      position: myLatlng,\n      map: map,\n      animation: google.maps.Animation.DROP,\n      title: \"Material Dashboard React!\",\n    });\n\n    const contentString =\n      '<div class=\"info-window-content\"><h2>Material Dashboard React</h2>' +\n      \"<p>A premium Admin for React, Material-UI, and React Hooks.</p></div>\";\n\n    const infowindow = new google.maps.InfoWindow({\n      content: contentString,\n    });\n\n    google.maps.event.addListener(marker, \"click\", function () {\n      infowindow.open(map, marker);\n    });\n  });\n  return (\n    <>\n      <div style={{ height: `100vh` }} ref={mapRef}></div>\n    </>\n  );\n};\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}