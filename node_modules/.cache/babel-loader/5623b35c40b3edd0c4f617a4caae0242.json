{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\humza\\\\Quran-Academy-Web\\\\src\\\\StudentDashboard\\\\src\\\\components\\\\CustomInput\\\\CustomInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\"; // @material-ui/icons\n\nimport { Clear } from \"@material-ui/icons\";\nimport { Check } from \"@material-ui/icons\"; // core components\n\nimport styles from \"../../assets/jss/material-dashboard-react/components/customInputStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(styles);\nexport default function CustomInput(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    formControlProps,\n    labelText,\n    id,\n    labelProps,\n    inputProps,\n    error,\n    success,\n    rtlActive\n  } = props;\n  const labelClasses = classNames({\n    [\" \" + classes.labelRootError]: error,\n    [\" \" + classes.labelRootSuccess]: success && !error,\n    [\" \" + classes.labelRTL]: rtlActive\n  });\n  const underlineClasses = classNames({\n    [classes.underlineError]: error,\n    [classes.underlineSuccess]: success && !error,\n    [classes.underline]: true\n  });\n  const marginTop = classNames({\n    [classes.marginTop]: labelText === undefined\n  });\n  let newInputProps = {\n    maxLength: inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\n    minLength: inputProps && inputProps.minLength ? inputProps.minLength : undefined,\n    step: inputProps && inputProps.step ? inputProps.step : undefined\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, { ...formControlProps,\n    className: formControlProps.className + \" \" + classes.formControl,\n    children: [labelText !== undefined ? /*#__PURE__*/_jsxDEV(InputLabel, {\n      className: classes.labelRoot + labelClasses,\n      htmlFor: id,\n      ...labelProps,\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Input, {\n      classes: {\n        root: marginTop,\n        disabled: classes.disabled,\n        underline: underlineClasses\n      },\n      id: id,\n      ...inputProps,\n      inputProps: newInputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Clear, {\n      className: classes.feedback + \" \" + classes.labelRootError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : success ? /*#__PURE__*/_jsxDEV(Check, {\n      className: classes.feedback + \" \" + classes.labelRootSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomInput, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  labelText: PropTypes.node,\n  labelProps: PropTypes.object,\n  id: PropTypes.string,\n  inputProps: PropTypes.object,\n  formControlProps: PropTypes.object,\n  error: PropTypes.bool,\n  success: PropTypes.bool,\n  rtlActive: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["C:/Users/User/Desktop/humza/Quran-Academy-Web/src/StudentDashboard/src/components/CustomInput/CustomInput.js"],"names":["React","classNames","PropTypes","makeStyles","FormControl","InputLabel","Input","Clear","Check","styles","useStyles","CustomInput","props","classes","formControlProps","labelText","id","labelProps","inputProps","error","success","rtlActive","labelClasses","labelRootError","labelRootSuccess","labelRTL","underlineClasses","underlineError","underlineSuccess","underline","marginTop","undefined","newInputProps","maxLength","minLength","step","className","formControl","labelRoot","root","disabled","feedback","propTypes","node","object","string","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,SAASC,KAAT,QAAsB,oBAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0EAAnB;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACM,MAAD,CAA5B;AAEA,eAAe,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,QAAM;AACJI,IAAAA,gBADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,EAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA;AARI,MASFT,KATJ;AAWA,QAAMU,YAAY,GAAGrB,UAAU,CAAC;AAC9B,KAAC,MAAMY,OAAO,CAACU,cAAf,GAAgCJ,KADF;AAE9B,KAAC,MAAMN,OAAO,CAACW,gBAAf,GAAkCJ,OAAO,IAAI,CAACD,KAFhB;AAG9B,KAAC,MAAMN,OAAO,CAACY,QAAf,GAA0BJ;AAHI,GAAD,CAA/B;AAKA,QAAMK,gBAAgB,GAAGzB,UAAU,CAAC;AAClC,KAACY,OAAO,CAACc,cAAT,GAA0BR,KADQ;AAElC,KAACN,OAAO,CAACe,gBAAT,GAA4BR,OAAO,IAAI,CAACD,KAFN;AAGlC,KAACN,OAAO,CAACgB,SAAT,GAAqB;AAHa,GAAD,CAAnC;AAKA,QAAMC,SAAS,GAAG7B,UAAU,CAAC;AAC3B,KAACY,OAAO,CAACiB,SAAT,GAAqBf,SAAS,KAAKgB;AADR,GAAD,CAA5B;AAGA,MAAIC,aAAa,GAAG;AAClBC,IAAAA,SAAS,EACPf,UAAU,IAAIA,UAAU,CAACe,SAAzB,GAAqCf,UAAU,CAACe,SAAhD,GAA4DF,SAF5C;AAGlBG,IAAAA,SAAS,EACPhB,UAAU,IAAIA,UAAU,CAACgB,SAAzB,GAAqChB,UAAU,CAACgB,SAAhD,GAA4DH,SAJ5C;AAKlBI,IAAAA,IAAI,EAAEjB,UAAU,IAAIA,UAAU,CAACiB,IAAzB,GAAgCjB,UAAU,CAACiB,IAA3C,GAAkDJ;AALtC,GAApB;AAOA,sBACE,QAAC,WAAD,OACMjB,gBADN;AAEE,IAAA,SAAS,EAAEA,gBAAgB,CAACsB,SAAjB,GAA6B,GAA7B,GAAmCvB,OAAO,CAACwB,WAFxD;AAAA,eAIGtB,SAAS,KAAKgB,SAAd,gBACC,QAAC,UAAD;AACE,MAAA,SAAS,EAAElB,OAAO,CAACyB,SAAR,GAAoBhB,YADjC;AAEE,MAAA,OAAO,EAAEN,EAFX;AAAA,SAGMC,UAHN;AAAA,gBAKGF;AALH;AAAA;AAAA;AAAA;AAAA,YADD,GAQG,IAZN,eAaE,QAAC,KAAD;AACE,MAAA,OAAO,EAAE;AACPwB,QAAAA,IAAI,EAAET,SADC;AAEPU,QAAAA,QAAQ,EAAE3B,OAAO,CAAC2B,QAFX;AAGPX,QAAAA,SAAS,EAAEH;AAHJ,OADX;AAME,MAAA,EAAE,EAAEV,EANN;AAAA,SAOME,UAPN;AAQE,MAAA,UAAU,EAAEc;AARd;AAAA;AAAA;AAAA;AAAA,YAbF,EAuBGb,KAAK,gBACJ,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEN,OAAO,CAAC4B,QAAR,GAAmB,GAAnB,GAAyB5B,OAAO,CAACU;AAAnD;AAAA;AAAA;AAAA;AAAA,YADI,GAEFH,OAAO,gBACT,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEP,OAAO,CAAC4B,QAAR,GAAmB,GAAnB,GAAyB5B,OAAO,CAACW;AAAnD;AAAA;AAAA;AAAA;AAAA,YADS,GAEP,IA3BN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAhEuBb,W;UACND,S;;;KADMC,W;AAkExBA,WAAW,CAAC+B,SAAZ,GAAwB;AACtB3B,EAAAA,SAAS,EAAEb,SAAS,CAACyC,IADC;AAEtB1B,EAAAA,UAAU,EAAEf,SAAS,CAAC0C,MAFA;AAGtB5B,EAAAA,EAAE,EAAEd,SAAS,CAAC2C,MAHQ;AAItB3B,EAAAA,UAAU,EAAEhB,SAAS,CAAC0C,MAJA;AAKtB9B,EAAAA,gBAAgB,EAAEZ,SAAS,CAAC0C,MALN;AAMtBzB,EAAAA,KAAK,EAAEjB,SAAS,CAAC4C,IANK;AAOtB1B,EAAAA,OAAO,EAAElB,SAAS,CAAC4C,IAPG;AAQtBzB,EAAAA,SAAS,EAAEnB,SAAS,CAAC4C;AARC,CAAxB","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\n// @material-ui/icons\r\nimport { Clear } from \"@material-ui/icons\";\r\nimport { Check } from \"@material-ui/icons\";\r\n// core components\r\nimport styles from \"../../assets/jss/material-dashboard-react/components/customInputStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomInput(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    formControlProps,\r\n    labelText,\r\n    id,\r\n    labelProps,\r\n    inputProps,\r\n    error,\r\n    success,\r\n    rtlActive,\r\n  } = props;\r\n\r\n  const labelClasses = classNames({\r\n    [\" \" + classes.labelRootError]: error,\r\n    [\" \" + classes.labelRootSuccess]: success && !error,\r\n    [\" \" + classes.labelRTL]: rtlActive,\r\n  });\r\n  const underlineClasses = classNames({\r\n    [classes.underlineError]: error,\r\n    [classes.underlineSuccess]: success && !error,\r\n    [classes.underline]: true,\r\n  });\r\n  const marginTop = classNames({\r\n    [classes.marginTop]: labelText === undefined,\r\n  });\r\n  let newInputProps = {\r\n    maxLength:\r\n      inputProps && inputProps.maxLength ? inputProps.maxLength : undefined,\r\n    minLength:\r\n      inputProps && inputProps.minLength ? inputProps.minLength : undefined,\r\n    step: inputProps && inputProps.step ? inputProps.step : undefined,\r\n  };\r\n  return (\r\n    <FormControl\r\n      {...formControlProps}\r\n      className={formControlProps.className + \" \" + classes.formControl}\r\n    >\r\n      {labelText !== undefined ? (\r\n        <InputLabel\r\n          className={classes.labelRoot + labelClasses}\r\n          htmlFor={id}\r\n          {...labelProps}\r\n        >\r\n          {labelText}\r\n        </InputLabel>\r\n      ) : null}\r\n      <Input\r\n        classes={{\r\n          root: marginTop,\r\n          disabled: classes.disabled,\r\n          underline: underlineClasses,\r\n        }}\r\n        id={id}\r\n        {...inputProps}\r\n        inputProps={newInputProps}\r\n      />\r\n      {error ? (\r\n        <Clear className={classes.feedback + \" \" + classes.labelRootError} />\r\n      ) : success ? (\r\n        <Check className={classes.feedback + \" \" + classes.labelRootSuccess} />\r\n      ) : null}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  labelText: PropTypes.node,\r\n  labelProps: PropTypes.object,\r\n  id: PropTypes.string,\r\n  inputProps: PropTypes.object,\r\n  formControlProps: PropTypes.object,\r\n  error: PropTypes.bool,\r\n  success: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}